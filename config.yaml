# process names are case-insensitive
# you can use 'master' to indicate the master channel, or a list of process names to create a group
# you can use 'mic' to control your mic input level (uses the default recording device)
# you can use 'deej.unmapped' to control all apps that aren't bound to any slider (this ignores master, system, mic and device-targeting sessions)
# windows only - you can use 'deej.current' to control the currently active app (whether full-screen or not)
# windows only - you can use a device's full name, i.e. "Speakers (Realtek High Definition Audio)", to bind it. this works for both output and input devices
# windows only - you can use 'system' to control the "system sounds" volume
# important: slider indexes start at 0, regardless of which analog pins you're using!


slider_mapping:
  0: master
  1: chrome.exe
  2: spotify.exe
  3: rocketleague.exe
  4: discord.exe


# build up of command [Type] [Task] [Target]
Pages:
  - name: GamingPage
    grid:
      - [ { icon: Discord, command: Application open discord }, { icon: BattleStageGames, command: Application open EscapeFromTarkov }, { icon: Minecraft, command: Application open Minecraft } ]
      - [ { icon: WindowsStart, command: Windowskey press }, { icon: Spotify, command: Application open Spotify }, { icon: Outplayed, command: Application open Outplayed } ]
      - [ { icon: Start, command: Audio Start }, { icon: Pause, command: Audio Pause }, { icon: Volume, command: Page open VolumeControl } ]
      - [ { icon: Microfoon, command: NULL }, { icon: NULL, command: NULL }, { icon: NULL, command: NULL } ]
  - name: VolumeControlPage
    volume_controls:
      spotify.exe: 75    # Represents Spotify volume percentage
      master: 50         # Represents master volume percentage
      opera: 60          # Represents Opera volume percentage


# set this to true if you want the controls inverted (i.e. top is 0%, bottom is 100%)
invert_sliders: false

# settings for connecting to the arduino board
com_port: COM9
baud_rate: 9600

# adjust the amount of signal noise reduction depending on your hardware quality
# supported values are "low" (excellent hardware), "default" (regular hardware) or "high" (bad, noisy hardware)
noise_reduction: default
